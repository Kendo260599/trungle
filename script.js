const can = ["Gi√°p", "·∫§t", "B√≠nh", "ƒêinh", "M·∫≠u", "K·ª∑", "Canh", "T√¢n", "Nh√¢m", "Qu√Ω"];
const chi = ["T√Ω", "S·ª≠u", "D·∫ßn", "M√£o", "Th√¨n", "T·ªµ", "Ng·ªç", "M√πi", "Th√¢n", "D·∫≠u", "Tu·∫•t", "H·ª£i"];

document.getElementById("birthForm").addEventListener("submit", function (e) {
  e.preventDefault();

  const birthdayInput = document.getElementById("birthday").value;
  const hourInput = document.getElementById("hour").value;
  const houseYear = parseInt(document.getElementById("houseYear").value);
  const houseDirection = document.getElementById("houseDirection").value;

  if (!birthdayInput || hourInput === "") {
    alert("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß ng√†y sinh v√† gi·ªù sinh.");
    return;
  }

  const birthday = new Date(birthdayInput);
  const hour = parseInt(hourInput);
  const gender = document.getElementById("gender").value;
  const year = birthday.getFullYear();
  const now = new Date().getFullYear();

  const canChiNam = `${can[(year + 6) % 10]} ${chi[(year + 8) % 12]}`;
  const gioChi = chi[Math.floor(hour / 2) % 12];

  const cung = getCungPhi(year, gender);
  const ketQuaKimLau = tinhKimLau(year, now);
  const ketQuaHoangOc = tinhHoangOc(year, now);
  const ketQuaTamTai = tinhTamTai(year, now);
  const ketQuaNgayTot = danhGiaNgayTotXau(birthday, year);
  const huongNha = goiYHuongNha(cung);
  const ketQuaHuyenKhong = phanTichHuyenKhong(houseDirection, houseYear);

  const resultBox = document.getElementById("result");
  resultBox.innerHTML = `
    <h2>K·∫øt qu·∫£ ph√¢n t√≠ch</h2>
    <p><strong>NƒÉm sinh (Can Chi):</strong> ${canChiNam}</p>
    <p><strong>Gi·ªù sinh (Chi):</strong> ${gioChi}</p>
    <p><strong>Cung phi:</strong> ${cung.ten} ‚Äì H√†nh ${cung.hanh}</p>
    <p><strong>H∆∞·ªõng t·ªët:</strong> ${cung.huongTot.join(", ")}</p>
    <p><strong>Tu·ªïi √¢m l·ªãch nƒÉm nay:</strong> ${ketQuaKimLau.tuoiAm}</p>
    <p><strong>Kim L√¢u:</strong> ${ketQuaKimLau.loai}</p>
    <p><strong>Hoang ·ªêc:</strong> ${ketQuaHoangOc.ketQua}</p>
    <p><strong>Tam Tai:</strong> ${ketQuaTamTai.ketQua}</p>
    <p><strong>G·ª£i √Ω h∆∞·ªõng nh√† h·ª£p tu·ªïi:</strong> ${huongNha}</p>
    <p><strong>ƒê√°nh gi√° ng√†y h√¥m nay:</strong> ${ketQuaNgayTot}</p>
    <p><strong>Huy·ªÅn Kh√¥ng Phi Tinh:</strong> ${ketQuaHuyenKhong}</p>
  `;
});

function getCungPhi(year, gender) {
  const nam = [1, 2, 3, 4, 5, 6, 7, 8, 9];
  const nu = [5, 6, 7, 8, 9, 1, 2, 3, 4];
  let tong = year.toString().split("").reduce((a, b) => a + parseInt(b), 0);
  while (tong > 9) tong = tong.toString().split("").reduce((a, b) => a + parseInt(b), 0);
  const cungSo = gender === "nam" ? nam[tong - 1] : nu[tong - 1];
  const cungMap = {
    1: { ten: "Kh·∫£m", hanh: "Th·ªßy", huongTot: ["B·∫Øc", "ƒê√¥ng", "Nam", "ƒê√¥ng Nam"] },
    2: { ten: "Kh√¥n", hanh: "Th·ªï", huongTot: ["T√¢y", "T√¢y Nam", "T√¢y B·∫Øc", "ƒê√¥ng B·∫Øc"] },
    3: { ten: "Ch·∫•n", hanh: "M·ªôc", huongTot: ["B·∫Øc", "ƒê√¥ng", "Nam", "ƒê√¥ng Nam"] },
    4: { ten: "T·ªën", hanh: "M·ªôc", huongTot: ["B·∫Øc", "ƒê√¥ng", "Nam", "ƒê√¥ng Nam"] },
    5: {
      ten: gender === "nam" ? "C·∫•n" : "Kh√¥n",
      hanh: "Th·ªï",
      huongTot: ["T√¢y", "T√¢y Nam", "T√¢y B·∫Øc", "ƒê√¥ng B·∫Øc"],
    },
    6: { ten: "C√†n", hanh: "Kim", huongTot: ["T√¢y", "T√¢y Nam", "T√¢y B·∫Øc", "ƒê√¥ng B·∫Øc"] },
    7: { ten: "ƒêo√†i", hanh: "Kim", huongTot: ["T√¢y", "T√¢y Nam", "T√¢y B·∫Øc", "ƒê√¥ng B·∫Øc"] },
    8: { ten: "C·∫•n", hanh: "Th·ªï", huongTot: ["T√¢y", "T√¢y Nam", "T√¢y B·∫Øc", "ƒê√¥ng B·∫Øc"] },
    9: { ten: "Ly", hanh: "H·ªèa", huongTot: ["B·∫Øc", "ƒê√¥ng", "Nam", "ƒê√¥ng Nam"] },
  };
  return cungMap[cungSo];
}

function goiYHuongNha(cung) {
  const goiY = {
    "Kh·∫£m": "H·ª£p h∆∞·ªõng: B·∫Øc, ƒê√¥ng, Nam, ƒê√¥ng Nam",
    "Ly": "H·ª£p h∆∞·ªõng: B·∫Øc, ƒê√¥ng, Nam, ƒê√¥ng Nam",
    "Ch·∫•n": "H·ª£p h∆∞·ªõng: B·∫Øc, ƒê√¥ng, Nam, ƒê√¥ng Nam",
    "T·ªën": "H·ª£p h∆∞·ªõng: B·∫Øc, ƒê√¥ng, Nam, ƒê√¥ng Nam",
    "C√†n": "H·ª£p h∆∞·ªõng: T√¢y, T√¢y B·∫Øc, T√¢y Nam, ƒê√¥ng B·∫Øc",
    "Kh√¥n": "H·ª£p h∆∞·ªõng: T√¢y, T√¢y B·∫Øc, T√¢y Nam, ƒê√¥ng B·∫Øc",
    "C·∫•n": "H·ª£p h∆∞·ªõng: T√¢y, T√¢y B·∫Øc, T√¢y Nam, ƒê√¥ng B·∫Øc",
    "ƒêo√†i": "H·ª£p h∆∞·ªõng: T√¢y, T√¢y B·∫Øc, T√¢y Nam, ƒê√¥ng B·∫Øc",
  };
  return goiY[cung.ten] || "Kh√¥ng x√°c ƒë·ªãnh";
}

function danhGiaNgayTotXau(birthday, year) {
  const chiNguoi = chi[(birthday.getFullYear() + 8) % 12];
  const today = new Date();
  const chiNgay = chi[(today.getDate() + 8) % 12];
  const capXung = {
    "T√Ω": "Ng·ªç", "S·ª≠u": "M√πi", "D·∫ßn": "Th√¢n", "M√£o": "D·∫≠u",
    "Th√¨n": "Tu·∫•t", "T·ªµ": "H·ª£i", "Ng·ªç": "T√Ω", "M√πi": "S·ª≠u",
    "Th√¢n": "D·∫ßn", "D·∫≠u": "M√£o", "Tu·∫•t": "Th√¨n", "H·ª£i": "T·ªµ"
  };
  if (capXung[chiNguoi] === chiNgay) {
    return `‚ùå H√¥m nay (${chiNgay}) xung v·ªõi tu·ªïi (${chiNguoi}) ‚Äì Kh√¥ng n√™n th·ª±c hi·ªán vi·ªác quan tr·ªçng.`;
  } else {
    return `‚úÖ H√¥m nay (${chiNgay}) kh√¥ng xung tu·ªïi ‚Äì C√≥ th·ªÉ xem l√† ng√†y t·∫°m ·ªïn.`;
  }
}

function tinhKimLau(namSinh, namXem) {
  const tuoiAm = namXem - namSinh + 1;
  const du = tuoiAm % 9;
  let loai = "Kh√¥ng ph·∫°m Kim L√¢u";
  if (du === 1) loai = "Kim L√¢u Th√¢n ‚Äì H·∫°i b·∫£n th√¢n";
  if (du === 3) loai = "Kim L√¢u Th√™ ‚Äì H·∫°i v·ª£ ch·ªìng";
  if (du === 6) loai = "Kim L√¢u T·ª≠ ‚Äì H·∫°i con c√°i";
  if (du === 8) loai = "Kim L√¢u S√∫c ‚Äì H·∫°i t√†i s·∫£n, kh√¥ng n√™n l√†m nh√†";
  return { tuoiAm, loai };
}

function tinhHoangOc(namSinh, namXem) {
  const tuoiAm = namXem - namSinh + 1;
  const du = tuoiAm % 6;
  const map = {
    1: "Nh·∫•t C√°t ‚Äì T·ªët, c√≥ th·ªÉ x√¢y nh√†",
    2: "Nh√¨ Nghi ‚Äì T·ªët, l√†m nh√† ph√°t ƒë·∫°t",
    3: "Tam ƒê·ªãa S√°t ‚Äì X·∫•u, d·ªÖ b·ªánh t·∫≠t",
    4: "T·ª© T·∫•n T√†i ‚Äì T·ªët, may m·∫Øn t√†i l·ªôc",
    5: "Ng≈© Th·ªç T·ª≠ ‚Äì X·∫•u, chia ly",
    0: "L·ª•c Hoang ·ªêc ‚Äì X·∫•u, tr√°nh l√†m nh√†",
  };
  return { tuoiAm, ketQua: map[du] };
}

function tinhTamTai(namSinh, namXem) {
  const chiList = ["T√Ω", "S·ª≠u", "D·∫ßn", "M√£o", "Th√¨n", "T·ªµ", "Ng·ªç", "M√πi", "Th√¢n", "D·∫≠u", "Tu·∫•t", "H·ª£i"];
  const chiSinh = chiList[(namSinh + 8) % 12];
  const chiXem = chiList[(namXem + 8) % 12];
  const tamTaiMap = {
    "Th√¢n": ["D·∫ßn", "M√£o", "Th√¨n"], "T√Ω": ["D·∫ßn", "M√£o", "Th√¨n"], "Th√¨n": ["D·∫ßn", "M√£o", "Th√¨n"],
    "D·∫≠u": ["T·ªµ", "Ng·ªç", "M√πi"], "S·ª≠u": ["T·ªµ", "Ng·ªç", "M√πi"], "T·ªµ": ["T·ªµ", "Ng·ªç", "M√πi"],
    "H·ª£i": ["Th√¢n", "D·∫≠u", "Tu·∫•t"], "M√£o": ["Th√¢n", "D·∫≠u", "Tu·∫•t"], "M√πi": ["Th√¢n", "D·∫≠u", "Tu·∫•t"],
    "Ng·ªç": ["H·ª£i", "T√Ω", "S·ª≠u"], "D·∫ßn": ["H·ª£i", "T√Ω", "S·ª≠u"]
  };
  const dangTamTai = tamTaiMap[chiSinh]?.includes(chiXem) || false;
  return {
    chiSinh,
    chiXem,
    ketQua: dangTamTai ? "‚ö†Ô∏è NƒÉm nay ƒëang v√†o Tam Tai" : "‚úÖ Kh√¥ng ph·∫°m Tam Tai",
  };
}

function xacDinhVan(namXay) {
  if (namXay >= 2004 && namXay <= 2023) return 8;
  if (namXay >= 2024 && namXay <= 2043) return 9;
  return null;
}

function phanTichHuyenKhong(huong, namXay) {
  const van = xacDinhVan(namXay);
  if (!van) return "‚ùå Kh√¥ng ph√¢n t√≠ch ƒë∆∞·ª£c v√¨ nƒÉm x√¢y nh√† ngo√†i ph·∫°m vi V·∫≠n 8‚Äì9.";
  const ketQuaVan8 = {
    "B·∫Øc": "H∆∞·ªõng sinh kh√≠, v∆∞·ª£ng t√†i ‚Äì l·ª£i nh√¢n ƒëinh.",
    "Nam": "H∆∞·ªõng hao kh√≠, t√†i suy ‚Äì d·ªÖ b·ªánh t·∫≠t.",
    "ƒê√¥ng": "Kh√° t·ªët n·∫øu minh ƒë∆∞·ªùng tho√°ng, h·ª£p M·ªôc.",
    "T√¢y": "V∆∞·ª£ng v·ªÅ n·ªØ, t√†i ·ªïn ƒë·ªãnh.",
    "ƒê√¥ng B·∫Øc": "H∆∞·ªõng hung ‚Äì d·ªÖ hao t√†i.",
    "ƒê√¥ng Nam": "V∆∞·ª£ng t√†i nh∆∞ng nh√¢n ƒëinh y·∫øu.",
    "T√¢y Nam": "Kh√° t·ªët n·∫øu sau nh√† c√≥ n√∫i/t∆∞·ªùng cao.",
    "T√¢y B·∫Øc": "T·ªët cho quy·ªÅn l·ª±c, uy t√≠n.",
  };
  const ketQuaVan9 = {
    "B·∫Øc": "Kh√° t·ªët v·ªÅ nh√¢n ƒëinh, tr√°nh m·ªü c·ª≠a ch√≠nh l·ªõn.",
    "Nam": "C·ª±c v∆∞·ª£ng t√†i ‚Äì nh√¢n ƒëinh ‚Äì ƒë·∫°i c√°t!",
    "ƒê√¥ng": "V∆∞·ª£ng n·ªØ ‚Äì t√†i trung b√¨nh.",
    "T√¢y": "K√©m ‚Äì d·ªÖ ph√°t b·ªánh v·∫∑t.",
    "ƒê√¥ng B·∫Øc": "T·ªët n·∫øu c·ª≠a tr∆∞·ªõc h∆∞·ªõng n√†y.",
    "ƒê√¥ng Nam": "Hung n·∫øu nh√† n·ªØ ·ªü m·ªôt m√¨nh.",
    "T√¢y Nam": "Trung b√¨nh ‚Äì n√™n h√≥a gi·∫£i n·∫øu ·ªü l√¢u d√†i.",
    "T√¢y B·∫Øc": "V∆∞·ª£ng quy·ªÅn uy, d·ªÖ thƒÉng ti·∫øn.",
  };
  const ketQua = van === 8 ? ketQuaVan8[huong] : ketQuaVan9[huong];
  return `üèØ V·∫≠n ${van} ‚Äì H∆∞·ªõng ${huong}: ${ketQua}`;
}
